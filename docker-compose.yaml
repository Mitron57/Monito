services:
  pinger:
    build:
      context: ./Pinger
    container_name: pinger
    depends_on:
      - dockmon
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    network_mode: host
    cap_add:
      - NET_RAW
  
  postgres:
    image: postgres:latest
    container_name: db_postgres
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend
  
  dockmon:
    build:
      context: ./DockMon
    container_name: dockmon
    env_file: ./DockMon/.env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dockmon.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.dockmon.entrypoints=backend"
      - "traefik.http.services.dockmon.loadbalancer.server.port=8080"
  
  frontend:
    build:
      context: ./frontend
    container_name: frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      - "traefik.http.routers.frontend.entrypoints=web"
    networks:
      - frontend
  
  
  
  traefik:
    image: traefik:v3.2.1
    container_name: traefik
    volumes:
      - "./traefik.yml:/etc/traefik/traefik.yml"
      - "/var/run/docker.sock:/var/run/docker.sock"
    ports:
      - "127.0.0.1:8080:8080"
      - "80:80"
      - "8989:8989"
    networks:
      - backend
      - frontend
    depends_on:
      - frontend
      - dockmon

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge
